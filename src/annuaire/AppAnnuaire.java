/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package annuaire; 
import java.awt.Color;
import java.awt.Cursor;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;

import annuaire.util.Error;
import annuaire.util.Util;
import annuaire.view.Details;
import annuaire.view.Login;

/**
 *
 * @author Mostapha
 */
public class AppAnnuaire extends JFrame {

	private static final long serialVersionUID = 1L;
    private JMenuItem chercher;
    private JMenuItem exporter;
    private JMenu menu;
    private JMenuBar menuBar;
    private JPanel publicPanel;

    public static AppAnnuaire app = null; 
	
    /**
     * Creates new form AppAnnuaire
     */
    public AppAnnuaire() {
        setTitle("Annuaire");  
        initComponents();
                         
    }

    public JMenuBar getMenuApp()
    {
        return menuBar;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        publicPanel = new JPanel();
        menuBar = new JMenuBar();
        menu = new JMenu();
        chercher = new JMenuItem();
        exporter = new JMenuItem();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        publicPanel.setForeground(new Color(204, 204, 255));

        GroupLayout publicPanelLayout = new GroupLayout(publicPanel);
        publicPanel.setLayout(publicPanelLayout);
        publicPanelLayout.setHorizontalGroup(
            publicPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 844, Short.MAX_VALUE)
        );
        publicPanelLayout.setVerticalGroup(
            publicPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );

        menu.setText("File");

        chercher.setText("Chercher");
        chercher.setToolTipText("Chercher");
        chercher.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                chercherActionPerformed(evt);
            }
        });
        menu.add(chercher);

        exporter.setText("Exporter");
        exporter.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent evt) {
        		exporterActionPerformed(evt);
        	}
        });
        menu.add(exporter);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(publicPanel, GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(publicPanel, GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
        );

        pack();
    }

    /**
     * 
     * @param evt
     */
    private void exporterActionPerformed(ActionEvent evt) {      
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
    	Error.setErrorMessage("");
    	Util.generateCsvFile(null); 
    	if(Error.getErrorMessage() != null 
    			   && !Error.getErrorMessage().trim().equalsIgnoreCase(""))
    	{
  		   JOptionPane.showMessageDialog(null,
				    Error.getErrorMessage(),
				    "Error",
				    JOptionPane.ERROR_MESSAGE);
    	}
    	else
    	{
  		   JOptionPane.showMessageDialog(null,
				    "L'operation Export est términé avec succès",
				    "Export",
				    JOptionPane.INFORMATION_MESSAGE);
    	}
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); 

      }  
    
    private void chercherActionPerformed(ActionEvent evt) {                                     
        AppAnnuaire.app.getContentPane().removeAll(); 
        Details detail = new Details();
        detail.getSauvegarde().setText("Trouver");
        AppAnnuaire.app.setContentPane(detail); 
        AppAnnuaire.app.setVisible(true);  
    }

    public static void main(String args[]) {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppAnnuaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppAnnuaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppAnnuaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppAnnuaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        EventQueue.invokeLater(new Runnable() {
            public void run() { 
                app =  new AppAnnuaire();
                app.getContentPane().removeAll(); 
                app.setContentPane(new Login()); 
                app.menuBar.setVisible(false); 
                app.setSize(690, 500); 
                app.setLocationRelativeTo(null);  
                app.setVisible(true); 
            }
        });
    }
}
