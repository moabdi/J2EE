/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package annuaire.view;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import org.jdesktop.xswingx.PromptSupport;

import annuaire.AppAnnuaire;
import annuaire.util.Contact;
import annuaire.util.DAO;
import annuaire.util.Error;
import annuaire.util.ResultSetTableModel;
import annuaire.util.Util;

/**
 *
 * @author Mostapha
 */
public class Results extends JPanel {
	/** 
	 * 
	 */
	private static final long serialVersionUID = 1L;
    private Contact contact;  
    private DAO bdd;
    private ResultSetTableModel model;

    private JButton ajouter;
    private JButton exporter;
    private JToggleButton modifier;
    private JTextField nom_prenom;
    private JLabel qui;
    private JLabel quoi;
    private JLabel rechercheAvance;
    private JPanel rechercheAvancePanel;
    private JPanel resultatPanel;
    private JScrollPane scrollPane;
    private JButton supprimer;
    private JTable tableAnuaire;
    private JButton trouver;
    private JTextField vile_codePostal;
    // End of variables declaration     
	/**
	 * Creates new form Results
	 */
	public Results() {
		initComponents();
	}

	/**
	 * Creates new form Results
	 */
	public Results(ResultSetTableModel pModel) {
		model = pModel;
		initComponents();
	}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        resultatPanel = new JPanel();
        scrollPane = new JScrollPane();
        tableAnuaire = new JTable();
        exporter = new JButton();
        ajouter = new JButton();
        modifier = new JToggleButton();
        supprimer = new JButton();
        rechercheAvancePanel = new JPanel();
        qui = new JLabel();
        quoi = new JLabel();
        nom_prenom = new JTextField();
        vile_codePostal = new JTextField();
        trouver = new JButton();
        rechercheAvance = new JLabel();

        contact = new Contact();
        bdd = new DAO();
        if(model == null)
        {
        	model = bdd.getAllContacts();
        }
        
        resultatPanel.setBorder(BorderFactory.createTitledBorder("Liste des contacts"));
        tableAnuaire.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableAnuaire.setModel(model);
        tableAnuaire.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAnuaireMouseClicked(evt);
            }
        });
        tableAnuaire.getSelectionModel().addListSelectionListener(new ListSelectionListener()
        {
            @Override
            public void valueChanged(ListSelectionEvent e)
            {
                if (!e.getValueIsAdjusting())
                {
                    boolean rowsAreSelected = tableAnuaire.getSelectedRowCount() > 0;
                    modifier.setEnabled(rowsAreSelected);
                    supprimer.setEnabled(rowsAreSelected);
                }
            }
        });
        scrollPane.setViewportView(tableAnuaire);

        exporter.setText("Exporter");
        exporter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exporterActionPerformed(evt);
            }
        });

        ajouter.setText("Ajouter");
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        modifier.setText("Modifier");
        modifier.setEnabled(false);
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        supprimer.setText("Supprimer");
        supprimer.setEnabled(false); 
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });


        rechercheAvancePanel.setBorder(BorderFactory.createTitledBorder("Recherche rapide"));

        qui.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        qui.setText("Qui ?");

        quoi.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        quoi.setText("Où ?");
        PromptSupport.setPrompt(" Nom, prénom", nom_prenom);
        PromptSupport.setPrompt("  Ville, code postal", vile_codePostal);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, nom_prenom);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, vile_codePostal);


        trouver.setText("Trouver");
        trouver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trouverActionPerformed(evt);
            }
        });

        rechercheAvance.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rechercheAvance.setForeground(new java.awt.Color(0, 51, 255));
        rechercheAvance.setText("Recherche avancé");
        rechercheAvance.setCursor(new Cursor(Cursor.HAND_CURSOR));
        rechercheAvance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechercheAvanceMouseClicked(evt);
            }
        });
        
        GroupLayout resultatPanelLayout = new GroupLayout(resultatPanel);
        resultatPanel.setLayout(resultatPanelLayout);
        resultatPanelLayout.setHorizontalGroup(
            resultatPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, resultatPanelLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(supprimer)
                .addGap(18, 18, 18)
                .addComponent(modifier, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ajouter)
                .addGap(18, 18, 18)
                .addComponent(exporter)
                .addContainerGap())
            .addComponent(scrollPane, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );
        resultatPanelLayout.setVerticalGroup(
            resultatPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(resultatPanelLayout.createSequentialGroup()
                .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(resultatPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(exporter)
                    .addComponent(ajouter)
                    .addComponent(modifier)
                    .addComponent(supprimer)))
        );

        GroupLayout rechercheAvancePanelLayout = new GroupLayout(rechercheAvancePanel);
        rechercheAvancePanel.setLayout(rechercheAvancePanelLayout);
        rechercheAvancePanelLayout.setHorizontalGroup(
            rechercheAvancePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(rechercheAvancePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(qui)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nom_prenom, GroupLayout.PREFERRED_SIZE, 244, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(quoi)
                .addGap(2, 2, 2)
                .addComponent(vile_codePostal, GroupLayout.PREFERRED_SIZE, 208, GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(trouver, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, rechercheAvancePanelLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rechercheAvance, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        rechercheAvancePanelLayout.setVerticalGroup(
            rechercheAvancePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(rechercheAvancePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(rechercheAvancePanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(qui)
                    .addComponent(quoi)
                    .addComponent(nom_prenom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(vile_codePostal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(trouver))
                .addGap(18, 18, 18)
                .addComponent(rechercheAvance)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(resultatPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rechercheAvancePanel, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rechercheAvancePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(resultatPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void ajouterActionPerformed(ActionEvent evt) {                                        
        AppAnnuaire.app.getContentPane().removeAll(); 
        AppAnnuaire.app.setContentPane(new Details()); 
        AppAnnuaire.app.setVisible(true);     
    }                                       

    private void exporterActionPerformed(ActionEvent evt) {      
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
    	Error.setErrorMessage("");
    	Util.generateCsvFile(null); 
    	if(Error.getErrorMessage() != null 
    			   && !Error.getErrorMessage().trim().equalsIgnoreCase(""))
    	{
  		   JOptionPane.showMessageDialog(null,
				    Error.getErrorMessage(),
				    "Error",
				    JOptionPane.ERROR_MESSAGE);
    	}
    	else
    	{
  		   JOptionPane.showMessageDialog(null,
				    "L'operation Export est términé avec succès",
				    "Export",
				    JOptionPane.INFORMATION_MESSAGE);
    	}
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); 

      }                                        


    private void tableAnuaireMouseClicked(MouseEvent evt) { 
        try
        {
            int row = tableAnuaire.getSelectedRow();
            String idContactClicked = (tableAnuaire.getModel().getValueAt(row, 0).toString());
            contact = bdd.getContactById(Integer.valueOf(idContactClicked));
        }
        catch(Exception e)
        {
        }
    }                                       

    private void rechercheAvanceMouseClicked(java.awt.event.MouseEvent evt) {                                     
        AppAnnuaire.app.getContentPane().removeAll(); 
        Details detail = new Details();
        detail.getSauvegarde().setText("Trouver");
        AppAnnuaire.app.setContentPane(detail); 
        AppAnnuaire.app.setVisible(true);  
    }                                            


    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {  
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
    	int parametre = JOptionPane.showConfirmDialog(null,
    			"Voulez-vous vraiment supprimer la ligne",
    			"Supprimer", JOptionPane.YES_NO_OPTION );
    	if(parametre==0) 
    	{ 
    		bdd.supprimerContact(contact.getId());
    		tableAnuaire.setModel(bdd.getAllContacts());
    	} 
    	AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); 
    }                                         

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {                                        
        AppAnnuaire.app.getContentPane().removeAll(); 
        Details detail = new Details(contact);
        detail.getSauvegarde().setText("Sauvegarder");
        AppAnnuaire.app.setContentPane(detail); 
        AppAnnuaire.app.setVisible(true);  
    }                                        

    private void trouverActionPerformed(java.awt.event.ActionEvent evt) {  
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); 
    	tableAnuaire.setModel(bdd.rechercheRapide(nom_prenom.getText(), vile_codePostal.getText()));
        AppAnnuaire.app.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); 
    }  
    
    
}
